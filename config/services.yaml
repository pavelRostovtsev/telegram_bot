parameters:

services:

    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    _instanceof:
        App\Models\telegram\Commands\TelegramCommandInterface:
            tags: [ 'app.telegram.commands' ]

    Redis:
        class: Redis
        calls:
            - connect:
                - '%env(REDIS_HOST)%'
                - '%env(int:REDIS_PORT)%'

    app.telegram.commands.service:
        class: App\Models\telegram\Services\CommandService
        arguments:
            $commands: !tagged_iterator app.telegram.commands

    App\Controller\TelegramController:
        arguments:
            $commandService: '@app.telegram.commands.service'

    app.telegram.http_client_factory:
        class: App\Models\telegram\Factory\HttpClientFactoryTelegram
        arguments:
            $token: '%env(TELEGRAM_TOKEN)%'
            $telegramUrl: '%env(TELEGRAM_URL)%'

    app.telegram.http_client:
        class: GuzzleHttp\Client
        factory: ['@app.telegram.http_client_factory', 'createHttpClient']

    App\Models\telegram\Commands\SetUrlTelegramCommand: ~

    App\Models\telegram\Commands\StartTelegramCommand: ~

    App\Models\telegram\Services\TelegramApi:
        arguments:
            $httpClient: '@app.telegram.http_client'

    App\Command\TelegramSetWebhookCommand:
        arguments:
            $httpClient: '@app.telegram.http_client'

    App\Command\TelegramWebhookInfoCommand:
        arguments:
            $httpClient: '@app.telegram.http_client'

    App\Models\telegram\Storage\RedisStorage:
        arguments:
            $redis: '@Redis'
